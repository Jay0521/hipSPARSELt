---
include: rocsparselt_common.yaml
include: known_bugs.yaml
include: spmm_common.yaml

Definitions:
  - &alpha_beta_range
    - { alpha:  1, beta:  0 }

  - &transA_transB_range
    - { transA: N, transB: N }
    - { transA: T, transB: N }

Tests:
- name: prune_bad_arg
  category: pre_checkin
  function:
    - prune_bad_arg: *real_precisions
  transA: N
  transB: N

# Tests confirm no NaN propagation when alpha = 0, 2 and beta = 0. Value .NaN is converted into zero
- {name: alpha_beta_zero_NaN, category: pre_checkin, precision: *hpa_bf16_precision,
   function: prune, transA: N, transB: N, M: 256, N: 128, K:  64, alpha: [ .NaN, 2 ], beta: [ .NaN, 2 ] }


# Split *real_precisions into *int8 and *nonint8_real_precisions. Since int8 has flags 0,1

- name: prune_small
  category: quick
  function:
    prune: *real_precisions
  matrix_size: *small_matrix_size_range
  transA_transB: *transA_transB_range
  alpha_beta: *alpha_beta_range
  prune_algo: [ 0, 1 ]

- name: prune_medium
  category: pre_checkin
  function:
    prune: *real_precisions
  matrix_size: *medium_matrix_size_range
  transA_transB: *transA_transB_range
  alpha_beta: *alpha_beta_range
  prune_algo: [ 0, 1 ]

- name: prune_medium_alt
  category: pre_checkin
  function:
    prune: *hpa_half_precision
  matrix_size: *medium_matrix_size_range
  transA_transB: *transA_transB_range
  alpha: 1
  beta: 0
  initialization: special
  prune_algo: [ 0, 1 ]

- name: prune_medium_HMM
  category: HMM
  function:
    prune: *real_precisions
  matrix_size: *medium_matrix_size_range
  transA: [ N ]
  transB: [ N ]
  alpha: 1
  beta: 1
  HMM: true
  prune_algo: [ 0, 1 ]

- name: prune_chunk
  category: pre_checkin
  function:
    prune: *real_precisions
  matrix_size: *chunk_matrix_size_range
  transA_transB: *transA_transB_range
  alpha: 2
  beta: 3
  prune_algo: [ 0, 1 ]

- name: prune_deepbench
  category: nightly
  function:
    prune: *real_precisions
  matrix_size: *deepbench_sizes
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_deepbench_alt
  category: nightly
  function:
    prune: *hpa_half_precision
  matrix_size: *deepbench_sizes
  alpha: 1
  beta: 0
  flags: 4
  initialization: special
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_deepbench_large_int8
  category: nightly
  function:
    prune: *hpa_int8_precision
  matrix_size: *deepbench_large_sizes
  alpha_beta: *alpha_beta_range
  transA: T
  transB: N
  prune_algo: [ 0, 1 ]

- name: resnet50_fwd
  category: nightly
  function:
    prune: *real_precisions
  transA: N
  transB: N
  matrix_size: *resnet50_fwd_sizes
  alpha: 1
  beta: 0
  prune_algo: [ 0, 1 ]

- name: resnet50_fwd_alt
  category: nightly
  function:
    prune: *hpa_half_precision
  transA: N
  transB: N
  matrix_size: *resnet50_fwd_sizes
  alpha: 1
  beta: 0
  initialization: special
  prune_algo: [ 0, 1 ]

- name: resnet50_bwdwrw
  category: nightly
  function:
    prune: *real_precisions
  transA: T
  transB: N
  matrix_size: *resnet50_bwdwrw_sizes
  alpha: 1
  beta: 1
  prune_algo: [ 0, 1 ]

- name: resnet50_bwddata
  category: nightly
  function:
    prune: *real_precisions
  transA: N
  transB: T
  matrix_size: *resnet50_bwddata_sizes
  alpha: 1
  beta: 0
  prune_algo: [ 0, 1 ]

- name: inception4_fwd
  category: nightly
  function:
    prune: *real_precisions
  transA: N
  transB: N
  matrix_size: *inception4_fwd_sizes
  alpha: 1
  beta: 0
  prune_algo: [ 0, 1 ]

- name: inception4_bwdwrw
  category: nightly
  function:
    prune: *real_precisions
  transA: T
  transB: N
  matrix_size: *inception4_bwdwrw_sizes
  alpha: 1
  beta: 1
  prune_algo: [ 0, 1 ]

- name: inception4_bwddata
  category: nightly
  function:
    prune: *real_precisions
  transA: N
  transB: T
  matrix_size: *inception4_bwddata_sizes
  alpha: 1
  beta: 0
  prune_algo: [ 0, 1 ]

- name: ctest_bwdwrw
  category: nightly
  function:
    prune: *real_precisions
  transA: T
  transB: N
  alpha: 1
  beta: 1
  matrix_size: *ctest_bwdwrw_sizes
  prune_algo: [ 0, 1 ]

- name: ctest_fwd
  category: nightly
  function:
    prune: *real_precisions
  transA: N
  transB: N
  alpha: 1
  beta: 0
  matrix_size: *ctest_fwd_sizes
  prune_algo: [ 0, 1 ]

- name: prune_8
  category: quick
  function:
    prune: *real_precisions
  M: 8
  N: 8
  K: 8
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_9_12
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 9..12
  N: 9..12
  K: 8
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_13_16
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 13..16
  N: 13..16
  K: 16
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_17_20
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 17..20
  N: 17..20
  K: 16
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_20_23
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 20..23
  N: 20..23
  K: 16
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_24_27
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 24..27
  N: 24..27
  K: 24
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_28_31
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 28..31
  N: 28..31
  K: 24
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_32
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 31..33
  N: 31..33
  K: 32
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_32_9_129
  category: nightly
  function:
    prune: *real_precisions
  M: 9..129
  N: 31..33
  K: 32
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_48
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 47..49
  N: 47..49
  K: 48
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_48_9_129
  category: nightly
  function:
    prune: *real_precisions
  M: 47..49
  N: 9..129
  K: 48
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_64
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 63..65
  N: 63..65
  K: 64
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_64_9_129
  category: nightly
  function:
    prune: *real_precisions
  M: 63..65
  N: 63..65
  K: [16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128]
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_64_8
  category: quick
  function:
    prune: *real_precisions
  M: 63..65
  N: 8
  K: 8
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_8_64
  category: quick
  function:
    prune: *real_precisions
  M: 8
  N: 8
  K: 64
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_69_alias
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 69
  N: 65
  K: 64
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  c_noalias_d: [false, true]
  prune_algo: [ 0, 1 ]

- name: prune_96
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 95..97
  N: 95..97
  K: 96
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_128
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 127..129
  N: 127..129
  K: 128
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_256
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 255..257
  N: 255..257
  K: 256
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_256_9_12_16
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 255..257
  N: 9..12
  K: 16
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_13_16_256_8
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 13..16
  N: 255..257
  K: 8
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_9_12_13_16_256
  category: pre_checkin
  function:
    prune: *real_precisions

  M: 9..12
  N: 13..16
  K: 256
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_512
  category: pre_checkin
  function:
    prune: *real_precisions
  M: 511..513
  N: 511..513
  K: 512
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_1024
  category: nightly
  function:
    prune: *real_precisions
  M: 1023..1025
  N: 1023..1025
  K: 1024
  alpha_beta: *alpha_beta_range
  transA_transB: *transA_transB_range
  prune_algo: [ 0, 1 ]

- name: prune_ldd
  category: quick
  function:
    prune: *real_precisions
  matrix_size: *ldd_size_range
  c_noalias_d: [false, true]
  transA_transB: *transA_transB_range
  alpha_beta: *alpha_beta_range
  prune_algo: [ 0, 1 ]

- name: prune_bf16
  category: quick
  function:
    prune: *hpa_bf16_precision
  transA: T
  transB: N
  alpha: 1
  beta: 0
  matrix_size:
    - { M:  512, N:  512, K:  512 }
    - { M: 1024, N: 1024, K: 1024 }
    - { M: 2048, N: 2048, K: 2048 }
    - { M: 4096, N: 4096, K: 4096 }
    - { M:  960, N: 1024, K: 1024 }
    - { M: 3840, N: 4096, K: 4096 }
  prune_algo: [ 0, 1 ]
...
